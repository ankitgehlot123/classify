package classify;

import static classify.Result.getScaledDimension;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.UIManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ankit
 */
public class Result extends javax.swing.JFrame {

    /**
     * Creates new form Result
     */
    ArrayList<String> data;
    ArrayList<Double> score;
    int len;
    Image image;
    JPanel jPanel1;

    public Result(ArrayList<String> data, ArrayList<Double> score, int len, Image image) {
        initComponents();
        this.setAlwaysOnTop(true);
        this.data = data;
        this.score = score;
        this.len = len;
        this.image = image;
        // jPanel1.add(Box.createRigidArea(new Dimension(5, 10)));
        Dimension imgDim = new Dimension(image.getWidth(rootPane), image.getHeight(rootPane));
        imgDim = getScaledDimension(imgDim, new Dimension(200, 200));
        jLabel1.setIcon(new ImageIcon(image.getScaledInstance(imgDim.width, imgDim.height, Image.SCALE_SMOOTH)));
        jPanel1 = new JPanel();

        for (int i = 0; i < len; i++) {
            JLabel jLabel = new JLabel(data.get(i) + " : " + score.get(i));
            jLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);
            JProgressBar jp = new JProgressBar();
            jp.setAlignmentX(JProgressBar.LEFT_ALIGNMENT);
            jp.setPreferredSize(new Dimension(450, 20));
            jp.setMaximumSize(new Dimension(450, 20));
            jp.setValue((int) (score.get(i) * 100));
            jp.setStringPainted(true);
            jp.setString((int) (score.get(i) * 100) + "%");
            UIManager.put("jp.selectionBackground", Color.black);
            UIManager.put("jp.selectionForeground", Color.black);
            if (score.get(i) < 0.3) {
                //jLabel.setForeground(Color.red);
                jp.setForeground(Color.red);
            } else if (score.get(i) < 0.5 && score.get(i) >= 0.3) {
                //jLabel.setForeground(Color.pink);
                jp.setForeground(Color.pink);
            } else if (score.get(i) >= 0.5 && score.get(i) < 0.7) {
                //jLabel.setForeground(Color.orange);
                jp.setForeground(Color.orange);
            } else if (score.get(i) >= 0.7) {
                //jLabel.setForeground(Color.green);
                jp.setForeground(Color.green);
            }
            jPanel1.add(Box.createRigidArea(new Dimension(5, 20)));

            jPanel1.add(jLabel);
            jPanel1.add(jp);

        }
        BoxLayout boxLayout = new BoxLayout(jPanel1, BoxLayout.Y_AXIS);

        jPanel1.setLayout(boxLayout);
        JScrollPane jScrollPane = new JScrollPane(jPanel1);

        jScrollPane.setMinimumSize(new Dimension(160, 200));
        jScrollPane.setPreferredSize(new Dimension(480, 400));

        jPanel1.setSize(460, 500);
        jScrollPane.setSize(480, 400);
        jScrollPane.setLocation(0, jPanel2.getSize().height + 10);
        jScrollPane.setVisible(true);
        jScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane.setEnabled(true);

        this.setResizable(false);
        add(jScrollPane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(480, 750));

        jPanel2.setMinimumSize(new java.awt.Dimension(480, 280));
        jPanel2.setPreferredSize(new java.awt.Dimension(480, 280));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("RESULT");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(145, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(520, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Result.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
    }

    public static Dimension getScaledDimension(Dimension imgSize, Dimension boundary) {

        int original_width = imgSize.width;
        int original_height = imgSize.height;
        int bound_width = boundary.width;
        int bound_height = boundary.height;
        int new_width = original_width;
        int new_height = original_height;

        // first check if we need to scale width
        if (original_width > bound_width) {
            //scale width to fit
            new_width = bound_width;
            //scale height to maintain aspect ratio
            new_height = (new_width * original_height) / original_width;
        }

        // then check if we need to scale even with the new height
        if (new_height > bound_height) {
            //scale height to fit instead
            new_height = bound_height;
            //scale width to maintain aspect ratio
            new_width = (new_height * original_width) / original_height;
        }

        return new Dimension(new_width, new_height);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
